// Generated by delombok at Sun Jan 19 19:44:26 CET 2025
package com.game.engine.Input;

import com.game.engine.components.Component;
import com.game.engine.msc.Debug;
import java.util.ArrayList;
import java.util.LinkedList;

public class InputComponent extends Component {
    LinkedList<Integer> leftKeys = new LinkedList<>();
    private String context;

    @Override
    public void update() {
        super.update();
        LinkedList<Integer> keyBuffer = new LinkedList<>();
        for (int key : leftKeys) {
            if (!Input.isKeyDown(key)) {
                keyBuffer.add(key);
            }
        }
        leftKeys.removeAll(keyBuffer);
    }

    public boolean isKeyDown(int key) {
        return (Input.isKeyDown(key) && Input.getActiveContext().contains(context));
    }

    public boolean isKeyPressed(int keycode) {
        boolean pressed = Input.getKeyDowns().contains(keycode) && !leftKeys.contains(keycode) && Input.getActiveContext().contains(context);
        if (pressed) leftKeys.add(keycode);
        return pressed;
    }



    public LinkedList<Integer> getLeftKeys() {
        return this.leftKeys;
    }



    public void setLeftKeys(final LinkedList<Integer> leftKeys) {
        this.leftKeys = leftKeys;
    }



    public String getContext() {
        return this.context;
    }



    public void setContext(final String context) {
        this.context = context;
    }
}
